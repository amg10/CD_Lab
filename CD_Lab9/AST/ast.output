Grammar

    0 $accept: exp $end

    1 exp: E

    2 E: E '+' T
    3  | E '-' T
    4  | T

    5 T: T '*' F
    6  | T '/' F
    7  | T '%' F
    8  | F

    9 F: '(' E ')'
   10  | NUMBER


Terminals, with rules where they appear

    $end (0) 0
    '%' (37) 7
    '(' (40) 9
    ')' (41) 9
    '*' (42) 5
    '+' (43) 2
    '-' (45) 3
    '/' (47) 6
    error (256)
    NUMBER (258) 10


Nonterminals, with rules where they appear

    $accept (11)
        on left: 0
    exp (12)
        on left: 1
        on right: 0
    E (13)
        on left: 2 3 4
        on right: 1 2 3 9
    T (14)
        on left: 5 6 7 8
        on right: 2 3 4 5 6 7
    F (15)
        on left: 9 10
        on right: 5 6 7 8


State 0

    0 $accept: . exp $end

    NUMBER  shift, and go to state 1
    '('     shift, and go to state 2

    exp  go to state 3
    E    go to state 4
    T    go to state 5
    F    go to state 6


State 1

   10 F: NUMBER .

    $default  reduce using rule 10 (F)


State 2

    9 F: '(' . E ')'

    NUMBER  shift, and go to state 1
    '('     shift, and go to state 2

    E  go to state 7
    T  go to state 5
    F  go to state 6


State 3

    0 $accept: exp . $end

    $end  shift, and go to state 8


State 4

    1 exp: E .
    2 E: E . '+' T
    3  | E . '-' T

    '+'  shift, and go to state 9
    '-'  shift, and go to state 10

    $default  reduce using rule 1 (exp)


State 5

    4 E: T .
    5 T: T . '*' F
    6  | T . '/' F
    7  | T . '%' F

    '*'  shift, and go to state 11
    '/'  shift, and go to state 12
    '%'  shift, and go to state 13

    $default  reduce using rule 4 (E)


State 6

    8 T: F .

    $default  reduce using rule 8 (T)


State 7

    2 E: E . '+' T
    3  | E . '-' T
    9 F: '(' E . ')'

    '+'  shift, and go to state 9
    '-'  shift, and go to state 10
    ')'  shift, and go to state 14


State 8

    0 $accept: exp $end .

    $default  accept


State 9

    2 E: E '+' . T

    NUMBER  shift, and go to state 1
    '('     shift, and go to state 2

    T  go to state 15
    F  go to state 6


State 10

    3 E: E '-' . T

    NUMBER  shift, and go to state 1
    '('     shift, and go to state 2

    T  go to state 16
    F  go to state 6


State 11

    5 T: T '*' . F

    NUMBER  shift, and go to state 1
    '('     shift, and go to state 2

    F  go to state 17


State 12

    6 T: T '/' . F

    NUMBER  shift, and go to state 1
    '('     shift, and go to state 2

    F  go to state 18


State 13

    7 T: T '%' . F

    NUMBER  shift, and go to state 1
    '('     shift, and go to state 2

    F  go to state 19


State 14

    9 F: '(' E ')' .

    $default  reduce using rule 9 (F)


State 15

    2 E: E '+' T .
    5 T: T . '*' F
    6  | T . '/' F
    7  | T . '%' F

    '*'  shift, and go to state 11
    '/'  shift, and go to state 12
    '%'  shift, and go to state 13

    $default  reduce using rule 2 (E)


State 16

    3 E: E '-' T .
    5 T: T . '*' F
    6  | T . '/' F
    7  | T . '%' F

    '*'  shift, and go to state 11
    '/'  shift, and go to state 12
    '%'  shift, and go to state 13

    $default  reduce using rule 3 (E)


State 17

    5 T: T '*' F .

    $default  reduce using rule 5 (T)


State 18

    6 T: T '/' F .

    $default  reduce using rule 6 (T)


State 19

    7 T: T '%' F .

    $default  reduce using rule 7 (T)
